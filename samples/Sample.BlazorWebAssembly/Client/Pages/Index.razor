@page "/"
@inject Sample.Shared.GovernanceApiClient Client
@inject System.Net.Http.HttpClient Http


<PageTitle>Get Proposal Info</PageTitle>

<h1>Get Proposal Info</h1>

<input type="number" @bind-value="this.ProposalId" @bind-value:event="oninput" />

<button @onclick="ReloadProposalInfo">Fetch using WebAssembly</button>
<button @onclick="ServerReloadProposalInfo">Fetch using Server Api</button>

@if (this.Info != null)
{
    <h2>Id: @this.Info.Id?.Id</h2>
    <h2>Status: @this.Info.Status</h2>
    <h2>Topic: @this.Info.Topic</h2>
    if (this.Info.LatestTally != null)
    {
        <h1>Votes</h1>
        <ul>
            <li>Yes: @this.Info.LatestTally.Yes</li>
            <li>No: @this.Info.LatestTally.No</li>
            <li>Total: @this.Info.LatestTally.Total</li>
        </ul>
    }
    if(this.Info.Proposal != null)
    {
        <h1>Proposal</h1>
        <h2>Url: @this.Info.Proposal.Url</h2>
        <h2>Text: @this.Info.Proposal.Title</h2>
    }
}

@code {
    public ulong? ProposalId { get; set; }
    public ProposalInfo? Info { get; set; }

    public async Task ReloadProposalInfo()
    {
        if (this.ProposalId != null)
        {
            this.Info = await this.Client.GetProposalInfoAsync(this.ProposalId.Value);
        }
    }

    
    public async Task ServerReloadProposalInfo()
    {
        if (this.ProposalId != null)
        {
            HttpResponseMessage response = await this.Http.GetAsync($"api/Governance/GetProposalInfo/{this.ProposalId.Value}");
            response.EnsureSuccessStatusCode();
            this.Info = await response.Content.ReadFromJsonAsync<ProposalInfo?>();
        }
    }
}