using EdjCase.ICP.Agent.Agents;
using EdjCase.ICP.Candid.Models;
using EdjCase.ICP.Candid;
using System.Collections.Generic;
using System;
using EdjCase.ICP.Agent.Responses;

namespace Test
{
	public class AnonymousTuplesApiClient
	{
		public IAgent Agent { get; }

		public Principal CanisterId { get; }

		public CandidConverter Converter { get; }

		public AnonymousTuplesApiClient(IAgent agent, Principal canisterId, CandidConverter converter = default)
		{
			this.Agent = agent;
			this.CanisterId = canisterId;
			this.Converter = converter;
		}

		public async System.Threading.Tasks.Task<List<ValueTuple<UnboundedUInt, List<Principal>>>> A()
		{
			CandidArg arg = CandidArg.FromCandid();
			QueryResponse response = await this.Agent.QueryAsync(this.CanisterId, "a", arg);
			CandidArg reply = response.ThrowOrGetReply();
			return reply.ToObjects<List<ValueTuple<UnboundedUInt, List<Principal>>>>(this.Converter);
		}

		public async System.Threading.Tasks.Task<List<ValueTuple<string, string>>> B()
		{
			CandidArg arg = CandidArg.FromCandid();
			QueryResponse response = await this.Agent.QueryAsync(this.CanisterId, "b", arg);
			CandidArg reply = response.ThrowOrGetReply();
			return reply.ToObjects<List<ValueTuple<string, string>>>(this.Converter);
		}
	}
}
