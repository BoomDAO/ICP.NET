{
  "Name": {},
  "ClientFile": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\nusing EdjCase.ICP.Agent.Agents;\nusing EdjCase.ICP.Agent.Responses;\nusing EdjCase.ICP.Candid.Models;\nusing Test.Models;\n\nnamespace Test\n{\n\tpublic class DexApiClient\n\t{\n\t\tpublic IAgent Agent { get; }\n\t\tpublic Principal CanisterId { get; }\n\t\tpublic DexApiClient(EdjCase.ICP.Agent.Agents.IAgent agent, EdjCase.ICP.Candid.Models.Principal canisterId)\n\t\t{\n\t\t\tthis.Agent = agent ?? throw new ArgumentNullException(nameof(agent));\n\t\t\tthis.CanisterId = canisterId ?? throw new ArgumentNullException(nameof(canisterId));\n\t\t}\n\t\tpublic async Task<CancelOrderReceipt> CancelOrder(OrderId arg0)\n\t\t{\n\t\t\tstring method = \"cancelOrder\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tCancelOrderReceipt r0 = responseArg.Values[0].ToObject<CancelOrderReceipt>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task Clear()\n\t\t{\n\t\t\tstring method = \"clear\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t}\n\t\tpublic async Task Credit(EdjCase.ICP.Candid.Models.Principal arg0, Token arg1, EdjCase.ICP.Candid.Models.UnboundedUInt arg2)\n\t\t{\n\t\t\tstring method = \"credit\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tCandidTypedValue p1 = CandidTypedValue.FromObject(arg1);\n\t\t\tCandidTypedValue p2 = CandidTypedValue.FromObject(arg2);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t\tp1,\n\t\t\t\tp2,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t}\n\t\tpublic async Task<DepositReceipt> Deposit(Token arg0)\n\t\t{\n\t\t\tstring method = \"deposit\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tDepositReceipt r0 = responseArg.Values[0].ToObject<DepositReceipt>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<System.Collections.Generic.List<Balance>> GetAllBalances()\n\t\t{\n\t\t\tstring method = \"getAllBalances\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tQueryResponse response = await this.Agent.QueryAsync(this.CanisterId, method, arg);\n\t\t\tQueryReply reply = response.ThrowOrGetReply();\n\t\t\tSystem.Collections.Generic.List<Balance> r0 = reply.Arg.Values[0].ToObject<System.Collections.Generic.List<Balance>>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<EdjCase.ICP.Candid.Models.UnboundedUInt> GetBalance(Token arg0)\n\t\t{\n\t\t\tstring method = \"getBalance\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tQueryResponse response = await this.Agent.QueryAsync(this.CanisterId, method, arg);\n\t\t\tQueryReply reply = response.ThrowOrGetReply();\n\t\t\tEdjCase.ICP.Candid.Models.UnboundedUInt r0 = reply.Arg.Values[0].ToObject<EdjCase.ICP.Candid.Models.UnboundedUInt>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<System.Collections.Generic.List<Balance>> GetBalances()\n\t\t{\n\t\t\tstring method = \"getBalances\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tQueryResponse response = await this.Agent.QueryAsync(this.CanisterId, method, arg);\n\t\t\tQueryReply reply = response.ThrowOrGetReply();\n\t\t\tSystem.Collections.Generic.List<Balance> r0 = reply.Arg.Values[0].ToObject<System.Collections.Generic.List<Balance>>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<System.Collections.Generic.List<byte>> GetDepositAddress()\n\t\t{\n\t\t\tstring method = \"getDepositAddress\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tSystem.Collections.Generic.List<byte> r0 = responseArg.Values[0].ToObject<System.Collections.Generic.List<byte>>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<EdjCase.ICP.Candid.Models.OptionalValue<Order>> GetOrder(OrderId arg0)\n\t\t{\n\t\t\tstring method = \"getOrder\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tEdjCase.ICP.Candid.Models.OptionalValue<Order> r0 = responseArg.Values[0].ToObject<EdjCase.ICP.Candid.Models.OptionalValue<Order>>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<System.Collections.Generic.List<Order>> GetOrders()\n\t\t{\n\t\t\tstring method = \"getOrders\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tSystem.Collections.Generic.List<Order> r0 = responseArg.Values[0].ToObject<System.Collections.Generic.List<Order>>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<string> GetSymbol(Token arg0)\n\t\t{\n\t\t\tstring method = \"getSymbol\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tstring r0 = responseArg.Values[0].ToObject<string>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<OrderPlacementReceipt> PlaceOrder(Token arg0, EdjCase.ICP.Candid.Models.UnboundedUInt arg1, Token arg2, EdjCase.ICP.Candid.Models.UnboundedUInt arg3)\n\t\t{\n\t\t\tstring method = \"placeOrder\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tCandidTypedValue p1 = CandidTypedValue.FromObject(arg1);\n\t\t\tCandidTypedValue p2 = CandidTypedValue.FromObject(arg2);\n\t\t\tCandidTypedValue p3 = CandidTypedValue.FromObject(arg3);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t\tp1,\n\t\t\t\tp2,\n\t\t\t\tp3,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tOrderPlacementReceipt r0 = responseArg.Values[0].ToObject<OrderPlacementReceipt>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<EdjCase.ICP.Candid.Models.Principal> Whoami()\n\t\t{\n\t\t\tstring method = \"whoami\";\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tQueryResponse response = await this.Agent.QueryAsync(this.CanisterId, method, arg);\n\t\t\tQueryReply reply = response.ThrowOrGetReply();\n\t\t\tEdjCase.ICP.Candid.Models.Principal r0 = reply.Arg.Values[0].ToObject<EdjCase.ICP.Candid.Models.Principal>();\n\t\t\treturn (r0);\n\t\t}\n\t\tpublic async Task<WithdrawReceipt> Withdraw(Token arg0, EdjCase.ICP.Candid.Models.UnboundedUInt arg1, EdjCase.ICP.Candid.Models.Principal arg2)\n\t\t{\n\t\t\tstring method = \"withdraw\";\n\t\t\tCandidTypedValue p0 = CandidTypedValue.FromObject(arg0);\n\t\t\tCandidTypedValue p1 = CandidTypedValue.FromObject(arg1);\n\t\t\tCandidTypedValue p2 = CandidTypedValue.FromObject(arg2);\n\t\t\tvar candidArgs = new List<CandidTypedValue>\n\t\t\t{\n\t\t\t\tp0,\n\t\t\t\tp1,\n\t\t\t\tp2,\n\t\t\t};\n\t\t\tCandidArg arg = CandidArg.FromCandid(candidArgs);\n\t\t\tCandidArg responseArg = await this.Agent.CallAndWaitAsync(this.CanisterId, method, arg);\n\t\t\tWithdrawReceipt r0 = responseArg.Values[0].ToObject<WithdrawReceipt>();\n\t\t\treturn (r0);\n\t\t}\n\t}\n}\n\n",
  "DataModelFiles": [
    {
      "Item1": "WithdrawReceipt",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(WithdrawReceiptTag))]\n\tpublic class WithdrawReceipt\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic WithdrawReceiptTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate WithdrawReceipt(WithdrawReceiptTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected WithdrawReceipt()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static WithdrawReceipt Err(WithdrawErr info)\n\t\t{\n\t\t\treturn new WithdrawReceipt(WithdrawReceiptTag.Err, info);\n\t\t}\n\t\t\n\t\tpublic WithdrawErr AsErr()\n\t\t{\n\t\t\tthis.ValidateTag(WithdrawReceiptTag.Err);\n\t\t\treturn (WithdrawErr)this.Value!;\n\t\t}\n\t\t\n\t\tpublic static WithdrawReceipt Ok(EdjCase.ICP.Candid.Models.UnboundedUInt info)\n\t\t{\n\t\t\treturn new WithdrawReceipt(WithdrawReceiptTag.Ok, info);\n\t\t}\n\t\t\n\t\tpublic EdjCase.ICP.Candid.Models.UnboundedUInt AsOk()\n\t\t{\n\t\t\tthis.ValidateTag(WithdrawReceiptTag.Ok);\n\t\t\treturn (EdjCase.ICP.Candid.Models.UnboundedUInt)this.Value!;\n\t\t}\n\t\t\n\t\tprivate void ValidateTag(WithdrawReceiptTag tag)\n\t\t{\n\t\t\tif (!this.Tag.Equals(tag))\n\t\t\t{\n\t\t\t\tthrow new InvalidOperationException($\"Cannot cast '{this.Tag}' to type '{tag}'\");\n\t\t\t}\n\t\t}\n\t}\n\tpublic enum WithdrawReceiptTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Err\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(WithdrawErr))]\n\t\tErr,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Ok\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(EdjCase.ICP.Candid.Models.UnboundedUInt))]\n\t\tOk,\n\t}\n}\n\n"
    },
    {
      "Item1": "WithdrawErr",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(WithdrawErrTag))]\n\tpublic class WithdrawErr\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic WithdrawErrTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate WithdrawErr(WithdrawErrTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected WithdrawErr()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static WithdrawErr BalanceLow()\n\t\t{\n\t\t\treturn new WithdrawErr(WithdrawErrTag.BalanceLow, null);\n\t\t}\n\t\t\n\t\tpublic static WithdrawErr TransferFailure()\n\t\t{\n\t\t\treturn new WithdrawErr(WithdrawErrTag.TransferFailure, null);\n\t\t}\n\t\t\n\t}\n\tpublic enum WithdrawErrTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"BalanceLow\")]\n\t\tBalanceLow,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"TransferFailure\")]\n\t\tTransferFailure,\n\t}\n}\n\n"
    },
    {
      "Item1": "OrderPlacementReceipt",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(OrderPlacementReceiptTag))]\n\tpublic class OrderPlacementReceipt\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic OrderPlacementReceiptTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate OrderPlacementReceipt(OrderPlacementReceiptTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected OrderPlacementReceipt()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static OrderPlacementReceipt Err(OrderPlacementErr info)\n\t\t{\n\t\t\treturn new OrderPlacementReceipt(OrderPlacementReceiptTag.Err, info);\n\t\t}\n\t\t\n\t\tpublic OrderPlacementErr AsErr()\n\t\t{\n\t\t\tthis.ValidateTag(OrderPlacementReceiptTag.Err);\n\t\t\treturn (OrderPlacementErr)this.Value!;\n\t\t}\n\t\t\n\t\tpublic static OrderPlacementReceipt Ok(EdjCase.ICP.Candid.Models.OptionalValue<Order> info)\n\t\t{\n\t\t\treturn new OrderPlacementReceipt(OrderPlacementReceiptTag.Ok, info);\n\t\t}\n\t\t\n\t\tpublic EdjCase.ICP.Candid.Models.OptionalValue<Order> AsOk()\n\t\t{\n\t\t\tthis.ValidateTag(OrderPlacementReceiptTag.Ok);\n\t\t\treturn (EdjCase.ICP.Candid.Models.OptionalValue<Order>)this.Value!;\n\t\t}\n\t\t\n\t\tprivate void ValidateTag(OrderPlacementReceiptTag tag)\n\t\t{\n\t\t\tif (!this.Tag.Equals(tag))\n\t\t\t{\n\t\t\t\tthrow new InvalidOperationException($\"Cannot cast '{this.Tag}' to type '{tag}'\");\n\t\t\t}\n\t\t}\n\t}\n\tpublic enum OrderPlacementReceiptTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Err\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(OrderPlacementErr))]\n\t\tErr,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Ok\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(EdjCase.ICP.Candid.Models.OptionalValue<Order>))]\n\t\tOk,\n\t}\n}\n\n"
    },
    {
      "Item1": "OrderPlacementErr",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(OrderPlacementErrTag))]\n\tpublic class OrderPlacementErr\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic OrderPlacementErrTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate OrderPlacementErr(OrderPlacementErrTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected OrderPlacementErr()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static OrderPlacementErr InvalidOrder()\n\t\t{\n\t\t\treturn new OrderPlacementErr(OrderPlacementErrTag.InvalidOrder, null);\n\t\t}\n\t\t\n\t\tpublic static OrderPlacementErr OrderBookFull()\n\t\t{\n\t\t\treturn new OrderPlacementErr(OrderPlacementErrTag.OrderBookFull, null);\n\t\t}\n\t\t\n\t}\n\tpublic enum OrderPlacementErrTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"InvalidOrder\")]\n\t\tInvalidOrder,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"OrderBookFull\")]\n\t\tOrderBookFull,\n\t}\n}\n\n"
    },
    {
      "Item1": "Order",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\tpublic class Order\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"from\")]\n\t\tpublic Token From { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"fromAmount\")]\n\t\tpublic EdjCase.ICP.Candid.Models.UnboundedUInt FromAmount { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"id\")]\n\t\tpublic OrderId Id { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"owner\")]\n\t\tpublic EdjCase.ICP.Candid.Models.Principal Owner { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"to\")]\n\t\tpublic Token To { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"toAmount\")]\n\t\tpublic EdjCase.ICP.Candid.Models.UnboundedUInt ToAmount { get; set; }\n\t\t\n\t}\n}\n\n"
    },
    {
      "Item1": "DepositReceipt",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(DepositReceiptTag))]\n\tpublic class DepositReceipt\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic DepositReceiptTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate DepositReceipt(DepositReceiptTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected DepositReceipt()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static DepositReceipt Err(DepositErr info)\n\t\t{\n\t\t\treturn new DepositReceipt(DepositReceiptTag.Err, info);\n\t\t}\n\t\t\n\t\tpublic DepositErr AsErr()\n\t\t{\n\t\t\tthis.ValidateTag(DepositReceiptTag.Err);\n\t\t\treturn (DepositErr)this.Value!;\n\t\t}\n\t\t\n\t\tpublic static DepositReceipt Ok(EdjCase.ICP.Candid.Models.UnboundedUInt info)\n\t\t{\n\t\t\treturn new DepositReceipt(DepositReceiptTag.Ok, info);\n\t\t}\n\t\t\n\t\tpublic EdjCase.ICP.Candid.Models.UnboundedUInt AsOk()\n\t\t{\n\t\t\tthis.ValidateTag(DepositReceiptTag.Ok);\n\t\t\treturn (EdjCase.ICP.Candid.Models.UnboundedUInt)this.Value!;\n\t\t}\n\t\t\n\t\tprivate void ValidateTag(DepositReceiptTag tag)\n\t\t{\n\t\t\tif (!this.Tag.Equals(tag))\n\t\t\t{\n\t\t\t\tthrow new InvalidOperationException($\"Cannot cast '{this.Tag}' to type '{tag}'\");\n\t\t\t}\n\t\t}\n\t}\n\tpublic enum DepositReceiptTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Err\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(DepositErr))]\n\t\tErr,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Ok\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(EdjCase.ICP.Candid.Models.UnboundedUInt))]\n\t\tOk,\n\t}\n}\n\n"
    },
    {
      "Item1": "DepositErr",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(DepositErrTag))]\n\tpublic class DepositErr\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic DepositErrTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate DepositErr(DepositErrTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected DepositErr()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static DepositErr BalanceLow()\n\t\t{\n\t\t\treturn new DepositErr(DepositErrTag.BalanceLow, null);\n\t\t}\n\t\t\n\t\tpublic static DepositErr TransferFailure()\n\t\t{\n\t\t\treturn new DepositErr(DepositErrTag.TransferFailure, null);\n\t\t}\n\t\t\n\t}\n\tpublic enum DepositErrTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"BalanceLow\")]\n\t\tBalanceLow,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"TransferFailure\")]\n\t\tTransferFailure,\n\t}\n}\n\n"
    },
    {
      "Item1": "CancelOrderReceipt",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(CancelOrderReceiptTag))]\n\tpublic class CancelOrderReceipt\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic CancelOrderReceiptTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate CancelOrderReceipt(CancelOrderReceiptTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected CancelOrderReceipt()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static CancelOrderReceipt Err(CancelOrderErr info)\n\t\t{\n\t\t\treturn new CancelOrderReceipt(CancelOrderReceiptTag.Err, info);\n\t\t}\n\t\t\n\t\tpublic CancelOrderErr AsErr()\n\t\t{\n\t\t\tthis.ValidateTag(CancelOrderReceiptTag.Err);\n\t\t\treturn (CancelOrderErr)this.Value!;\n\t\t}\n\t\t\n\t\tpublic static CancelOrderReceipt Ok(OrderId info)\n\t\t{\n\t\t\treturn new CancelOrderReceipt(CancelOrderReceiptTag.Ok, info);\n\t\t}\n\t\t\n\t\tpublic OrderId AsOk()\n\t\t{\n\t\t\tthis.ValidateTag(CancelOrderReceiptTag.Ok);\n\t\t\treturn (OrderId)this.Value!;\n\t\t}\n\t\t\n\t\tprivate void ValidateTag(CancelOrderReceiptTag tag)\n\t\t{\n\t\t\tif (!this.Tag.Equals(tag))\n\t\t\t{\n\t\t\t\tthrow new InvalidOperationException($\"Cannot cast '{this.Tag}' to type '{tag}'\");\n\t\t\t}\n\t\t}\n\t}\n\tpublic enum CancelOrderReceiptTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Err\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(CancelOrderErr))]\n\t\tErr,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"Ok\")]\n\t\t[EdjCase.ICP.Candid.Mapping.VariantOptionTypeAttribute(typeof(OrderId))]\n\t\tOk,\n\t}\n}\n\n"
    },
    {
      "Item1": "CancelOrderErr",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\t[EdjCase.ICP.Candid.Mapping.VariantAttribute(typeof(CancelOrderErrTag))]\n\tpublic class CancelOrderErr\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.VariantTagPropertyAttribute]\n\t\tpublic CancelOrderErrTag Tag { get; set; }\n\t\t[EdjCase.ICP.Candid.Mapping.VariantValuePropertyAttribute]\n\t\tpublic object? Value { get; set; }\n\t\tprivate CancelOrderErr(CancelOrderErrTag tag, System.Object? value)\n\t\t{\n\t\t\tthis.Tag = tag;\n\t\t\tthis.Value = value;\n\t\t}\n\t\t\n\t\tprotected CancelOrderErr()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic static CancelOrderErr NotAllowed()\n\t\t{\n\t\t\treturn new CancelOrderErr(CancelOrderErrTag.NotAllowed, null);\n\t\t}\n\t\t\n\t\tpublic static CancelOrderErr NotExistingOrder()\n\t\t{\n\t\t\treturn new CancelOrderErr(CancelOrderErrTag.NotExistingOrder, null);\n\t\t}\n\t\t\n\t}\n\tpublic enum CancelOrderErrTag\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"NotAllowed\")]\n\t\tNotAllowed,\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"NotExistingOrder\")]\n\t\tNotExistingOrder,\n\t}\n}\n\n"
    },
    {
      "Item1": "Balance",
      "Item2": "using System;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing EdjCase.ICP.Candid.Mapping;\nusing EdjCase.ICP.Candid;\nusing Token = EdjCase.ICP.Candid.Models.Principal;\nusing OrderId = System.UInt32;\n\nnamespace Test.Models\n{\n\tpublic class Balance\n\t{\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"amount\")]\n\t\tpublic EdjCase.ICP.Candid.Models.UnboundedUInt Amount { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"owner\")]\n\t\tpublic EdjCase.ICP.Candid.Models.Principal Owner { get; set; }\n\t\t\n\t\t[EdjCase.ICP.Candid.Mapping.CandidNameAttribute(\"token\")]\n\t\tpublic Token Token { get; set; }\n\t\t\n\t}\n}\n\n"
    }
  ],
  "AliasFile": null
}
